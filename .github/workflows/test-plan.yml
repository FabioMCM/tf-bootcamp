name: testing

on: workflow_dispatch

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS credentials
        run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Initialize Terraform
        run: terraform init

      - name: Check for comments in Terraform files
        id: check_comments
        run: |
          # Search for any commented-out code (using # or // for single-line comments)
          COMMENTED_CODE=$(grep -E '^\s*(#|//)' terraform/**/*.tf || true)
          echo "Commented code: $COMMENTED_CODE"
          if [[ -z "$COMMENTED_CODE" ]]; then
            echo "No comments found, skipping destroy."
            echo "destroy=false" >> $GITHUB_ENV
          else
            echo "Comments found, proceeding with destroy."
            echo "destroy=true" >> $GITHUB_ENV
          fi

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        env:
          TF_VAR_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          TF_VAR_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_AWS_REGION: ${{ secrets.TF_VAR_region }}

      - name: Terraform Destroy (only if commented)
        if: env.destroy == 'true'
        run: terraform destroy -auto-approve
        env:
          TF_VAR_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          TF_VAR_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_AWS_REGION: ${{ secrets.TF_VAR_region }}

      - name: Terraform Apply (if no destroy)
        if: env.destroy == 'false'
        run: terraform apply -auto-approve
        env:
          TF_VAR_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          TF_VAR_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_AWS_REGION: ${{ secrets.TF_VAR_region }}